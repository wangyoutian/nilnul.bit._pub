<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C4EB9780-FC42-45E5-AAB5-646EFB5DD273}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>nilnul.bit</RootNamespace>
    <AssemblyName>nilnul.bit130616</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SccProjectName>
    </SccProjectName>
    <SccLocalPath>
    </SccLocalPath>
    <SccAuxPath>
    </SccAuxPath>
    <SccProvider>
    </SccProvider>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == '_Temp|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\_Temp\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Absurdity.cs" />
    <Compile Include="AdjectiveI%28T%29.cs" />
    <Compile Include="AdjectiveTowardNoun.cs" />
    <Compile Include="adj\assertion\denial\FroAdj%28T.cs" />
    <Compile Include="adj\assertion\denial\FroAdj%28T,TAdj.cs" />
    <Compile Include="adj\FroAntonym%28T,TAdj.cs" />
    <Compile Include="adj\FroFunc%28T.cs" />
    <Compile Include="adj\FroPredicate.cs" />
    <Compile Include="adj\AssertionI%28T.cs" />
    <Compile Include="adj\assertion\FroAdj%28T.cs" />
    <Compile Include="adj\assertion\FroAdjSingleton%28T,TAdj.cs" />
    <Compile Include="adj\Noun%28T,TAdj.cs" />
    <Compile Include="adj\Noun%28T,TEq,TAdj.cs" />
    <Compile Include="adj\Env%28T,TAdj.cs" />
    <Compile Include="adj\FroAntonym%28T.cs" />
    <Compile Include="adj\Env%28T.cs" />
    <Compile Include="adj\Env%28T,TAdj,TEq.cs" />
    <Compile Include="Antonym.cs" />
    <Compile Include="Assert%28static.cs" />
    <Compile Include="Assert%28T%29.cs" />
    <Compile Include="Asserted%28T.cs" />
    <Compile Include="AssertFuncNegative.cs" />
    <Compile Include="AssertI%28T.cs" />
    <Compile Include="assertion\FroFunc%28T%29.cs" />
    <Compile Include="assertion\Prove.cs" />
    <Compile Include="assertion\SetOfExpr.cs" />
    <Compile Include="assertion\Sys.cs" />
    <Compile Include="AssertX.cs" />
    <Compile Include="Axiom%28T.cs" />
    <Compile Include="Axiom.cs" />
    <Compile Include="be\Assert%28T.cs" />
    <Compile Include="be\Assert.cs" />
    <Compile Include="be\Assertion%28T.cs" />
    <Compile Include="be\Assertion%28T,TBe.cs" />
    <Compile Include="BeAsserted%28T.cs" />
    <Compile Include="be\Asserted%28T,TBeSingleton.cs" />
    <Compile Include="be\Asserted%28T.cs" />
    <Compile Include="be\assert\ed\Suite.cs" />
    <Compile Include="be\assert\ed\Suite%28T,TBe,TEq.cs" />
    <Compile Include="be\assert\ValA%28T.cs" />
    <Compile Include="be\assert\Val%28T,TBe.cs" />
    <Compile Include="be\assert\Ed%28T,TBe.cs" />
    <Compile Include="be\Be_froAntonymBe.cs" />
    <Compile Include="be\Dual.cs" />
    <Compile Include="be\Reject%28T.cs" />
    <Compile Include="be\Reject.cs" />
    <Compile Include="be\Rejected%28T,TBeSingleton.cs" />
    <Compile Include="be\Rejection%28T.cs" />
    <Compile Include="be\Rejeced%28T.cs" />
    <Compile Include="be\Assert%28T,TBe.cs" />
    <Compile Include="be\Assert2%28T.cs" />
    <Compile Include="be\Be_froAntonym%28T.cs" />
    <Compile Include="Class1.cs" />
    <Compile Include="collection\BitX.cs" />
    <Compile Include="Contingency.cs" />
    <Compile Include="ContingencyI.cs" />
    <Compile Include="ContradictionI.cs" />
    <Compile Include="Assertion%28T%29.cs" />
    <Compile Include="BeI.cs" />
    <Compile Include="BeI%28T.cs" />
    <Compile Include="Assert%28T,TBe%29.cs" />
    <Compile Include="AdjectiveI2%28T%29.cs" />
    <Compile Include="AssertDeny_byAdj%28T%29.cs" />
    <Compile Include="AdjectiveType.cs" />
    <Compile Include="AssertDeny_byAdjSingleton%28T%29.cs" />
    <Compile Include="AssertI.cs" />
    <Compile Include="AssertDenyI%28T.cs" />
    <Compile Include="Adjective_FroFunc%28T%29.cs" />
    <Compile Include="AssertionI%28T.cs" />
    <Compile Include="Assertion_FroAdj%28T%29.cs" />
    <Compile Include="AssertionX.cs" />
    <Compile Include="AssertionNullary.cs" />
    <Compile Include="Assertion_byAdjSingleton%28T%29.cs" />
    <Compile Include="AdjectiveAntonymType.cs" />
    <Compile Include="Adjective_FroAntonym%28T%29.cs" />
    <Compile Include="Adjective_FroPredicate.cs" />
    <Compile Include="AdjectiveI3%28T%29.cs" />
    <Compile Include="AdjectiveTowardNoun2%28T,TAdj.cs" />
    <Compile Include="Assertion_byAdjSingleton2%28T.cs" />
    <Compile Include="Assertion_FroAdj2%28T.cs" />
    <Compile Include="Adjective_FroFunc2%28T.cs" />
    <Compile Include="AdjectiveType2.cs" />
    <Compile Include="AdjectiveAntonymType2.cs" />
    <Compile Include="Adjective_FroAntonym2%28T.cs" />
    <Compile Include="AdjectiveTowardNoun3%28T,TAdj.cs" />
    <Compile Include="AdjI%28T%29.cs" />
    <Compile Include="Be%28T.cs" />
    <Compile Include="ExprI.cs" />
    <Compile Include="func\Dual.cs" />
    <Compile Include="LiteralI.cs" />
    <Compile Include="obj_\op\Eq.cs" />
    <Compile Include="obj_\op\Same.cs" />
    <Compile Include="op\binary\Add.cs" />
    <Compile Include="op\binary\ConverseImply.cs" />
    <Compile Include="op\binary\ConverseNonimply.cs" />
    <Compile Include="op\binary\Multi.cs" />
    <Compile Include="op\binary\NonImply.cs" />
    <Compile Include="op\nullary\False.cs" />
    <Compile Include="op\nullary\True.cs" />
    <Compile Include="op\Precedence.cs" />
    <Compile Include="op\Predicate.cs" />
    <Compile Include="op\predicate\Be.cs" />
    <Compile Include="op\predicate\Unary.cs" />
    <Compile Include="op\predicate\UnaryI.cs" />
    <Compile Include="op\predicate\unary\Asserted%28T,TBe.cs" />
    <Compile Include="op\predicate\unary\Asserted.cs" />
    <Compile Include="op\predicate\unary\Assertion%28T,TBe.cs" />
    <Compile Include="op\Reject.cs" />
    <Compile Include="op\Assert.cs" />
    <Compile Include="op\Assert%28T.cs" />
    <Compile Include="op\Reject%28T.cs" />
    <Compile Include="op\Asserted%28T,TPredicate.cs" />
    <Compile Include="op\Rejected%28T,TPredicate.cs" />
    <Compile Include="op\Unary.cs" />
    <Compile Include="op\Unary%28T.cs" />
    <Compile Include="op\unary\Expr.cs" />
    <Compile Include="op\unary\Literal%28TPara.cs" />
    <Compile Include="op\unary\Var.cs" />
    <Compile Include="op\unary\VarI%28TPara.cs" />
    <Compile Include="op\unary\var\Expr.cs" />
    <Compile Include="PredicateI2%28T.cs" />
    <Compile Include="Predicate3%28T.cs" />
    <Compile Include="PredicateA2%28T.cs" />
    <Compile Include="be\Predicated%28T,TBeSingleton.cs" />
    <Compile Include="be\FroFunc%28T.cs" />
    <Compile Include="Assertion.cs" />
    <Compile Include="BeAsserted%28T,TBe.cs" />
    <Compile Include="BeAsserted_froBeAntonym%28T,TBe.cs" />
    <Compile Include="BeI2.cs" />
    <Compile Include="Be_froDualFunc%28T.cs" />
    <Compile Include="proof\Rules.cs" />
    <Compile Include="Reject.cs" />
    <Compile Include="theorems\DoubleDenial.cs" />
    <Compile Include="theorems\Equiv.cs" />
    <Compile Include="Var.cs" />
    <Compile Include="RefI.cs" />
    <Compile Include="VarI.cs" />
    <Compile Include="var\expr\ref_\Ref.cs" />
    <Compile Include="var\expr\Imply.cs" />
    <Compile Include="var\expr\Negate.cs" />
    <Compile Include="var\expr\Var.cs" />
    <Compile Include="var\expr\ExprI.cs" />
    <Compile Include="var\expr\Expr.cs" />
    <Compile Include="var\False.cs" />
    <Compile Include="var\True.cs" />
    <Compile Include="var\VarI.cs" />
    <Compile Include="var\LiteralI.cs" />
    <Compile Include="var\Var.cs" />
    <None Include="AdjectiveType3%28T,TAdj,TNoun.cs" />
    <Compile Include="AdjectiveTypeEq%28T,TAdj,TNoun,TEq.cs" />
    <Compile Include="AdjectiveSuite%28T,TAdj,TNoun,TEq.cs" />
    <Compile Include="AdjectiveTypeEq%28T,TAdj,TEq.cs" />
    <Compile Include="DenyI%28T.cs" />
    <Compile Include="predicate\FroAntonym.cs" />
    <Compile Include="str\op\Imply.cs" />
    <Compile Include="Turnstile.cs" />
    <Compile Include="TypeWithAssert.cs" />
    <Compile Include="Predicate2%28T.cs" />
    <Compile Include="op\binary\BinaryI.cs" />
    <Compile Include="op\NandX.cs" />
    <Compile Include="op\Nand.cs" />
    <Compile Include="TypeWithPredicate2.cs" />
    <Compile Include="PredicateA%28T.cs" />
    <Compile Include="PredicateX.cs" />
    <Compile Include="op\binary\And.cs" />
    <Compile Include="op\BinaryOpI.cs" />
    <Compile Include="op\binary\Diff.cs" />
    <Compile Include="op\binary\DiffX.cs" />
    <Compile Include="op\binary\Eq.cs" />
    <Compile Include="op\binary\Imply.cs" />
    <Compile Include="op\binary\ImplyX.cs" />
    <Compile Include="op\binary\Nand.cs" />
    <Compile Include="op\binary\Nor.cs" />
    <Compile Include="op\binary\NotImply.cs" />
    <Compile Include="op\binary\NotImplyX.cs" />
    <Compile Include="op\binary\Or.cs" />
    <Compile Include="op\binary\Xor.cs" />
    <Compile Include="op\unary\Not.cs" />
    <Compile Include="op\unary\UnaryI.cs" />
    <Compile Include="Possible.cs" />
    <Compile Include="Predicate%28Static.cs" />
    <Compile Include="Predicate%28T.cs" />
    <Compile Include="Predicate%28T1,T2.cs" />
    <Compile Include="PredicateI%28T.cs" />
    <Compile Include="PredicateI.cs" />
    <Compile Include="PredicateSingleton.cs" />
    <Compile Include="PredicateSingletonI%28T.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="StaticAssert%28T.cs" />
    <Compile Include="TautologyI.cs" />
    <Compile Include="TypeWithPredicate.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="op\binary\binary.cd" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="expr\" />
    <Folder Include="infer\" />
    <Folder Include="op\binary\_\" />
    <Folder Include="op\unary\ref_\" />
    <Folder Include="theorem\" />
    <Folder Include="var.expr\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\nilnul%28130115\lib\nilnul%28130621.csproj">
      <Project>{781321c7-7737-4b1f-ba13-048169502805}</Project>
      <Name>nilnul%28130621</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\nilnul.obj\lib\nilnul.obj.csproj">
      <Project>{9807479b-f797-4a18-9feb-0cc576c27308}</Project>
      <Name>nilnul.obj</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>